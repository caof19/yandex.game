services:
    client:
        container_name: prakticum-client
        build:
            context: .
            dockerfile: Dockerfile.client
            args:
                CLIENT_PORT: ${CLIENT_PORT}
        restart: always
        ports:
            - "${CLIENT_PORT}:80"
        environment:
            - CLIENT_PORT=${CLIENT_PORT}
            - SERVER_PORT=${SERVER_PORT}
    server:
        container_name: prakticum-server
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
                SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        environment:
            SERVER_PORT: ${SERVER_PORT}
        networks:
            - awesome

    postgres:
        image: postgres:14
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            PGDATA: "/var/lib/postgresql/data/pgdata"
        depends_on:
            - server
        networks:
            - awesome
        volumes:
            - postgress-data:/var/lib/postgresql/data
    flyway:
        image: flyway/flyway
        depends_on:
            - postgres
        command: -url=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
        volumes:
            - ./migrations:/flyway/sql
        networks:
            - awesome
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:4.18
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
            PGADMIN_LISTEN_PORT: ${PGADMIN_INNER_PORT}
            DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@${POSTGRES_USER}:${POSTGRES_PORT}/${POSTGRES_DB}
        ports:
            - "${PGADMIN_OUTER_PORT}:${PGADMIN_INNER_PORT}"
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        depends_on:
            - postgres
        networks:
            - awesome
volumes:
    pgadmin-data:
    postgress-data:


networks:
    awesome:
        driver: bridge
